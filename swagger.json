{
    "openapi": "3.0.0",
    "info": {
        "title": "Simple CRUD API",
        "description": "This NodeJs API is a basic CRUD model using MongoDB",
        "contact": {
            "email": "luclemente.dev@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:3333/v1",
            "description": "Run in local machine"
        }
    ],
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/user/": {
            "post": {
                "summary": "Create new user",
                "description": "This route will create a new user in the database.",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products"
                            },
                            "examples": {
                                "user 1": {
                                    "value": {
                                        "nickname": "jo_lee",
                                        "name": "Joseph Lee",
                                        "age": 25
                                    }
                                },
                                "user 2": {
                                    "value": {
                                        "nickname": "doritos48",
                                        "name": "Alex",
                                        "age": 32
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "User successfully created!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseSuccess"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get list of all users",
                "description": "This route will get a list of all users.",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseList"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "summary": "Get user by ID",
                "description": "This route will get a specific user by it's ID.",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseSingle"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update user by ID",
                "description": "This route will update a specific user by it's ID.",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products"
                            },
                            "examples": {
                                "user": {
                                    "value": {
                                        "nickname": "jo_lee",
                                        "name": "Joseph Lee II",
                                        "age": 26
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "No user was updated because there's no requested changes.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseSuccess"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user by ID",
                "description": "This route will delete a specific user by it's ID.",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "User deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseSuccess"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/findByNickname": {
            "get": {
                "summary": "Get user by nickname",
                "description": "This route will get a specific user by it's nickname.",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "nickname",
                        "in": "query",
                        "description": "User name",
                        "required": true
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseSingle"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Products": {
                "type": "object",
                "properties": {
                    "nickname": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "age": {
                        "type": "number"
                    }
                }
            },
            "ProductsResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "age": {
                        "type": "number"
                    }
                }
            },
            "ApiResponseSingle": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "example": "Success"
                    },
                    "user": {
                        "$ref": "#/components/schemas/ProductsResponse"
                    }
                }
            },
            "ApiResponseList": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "example": "Success"
                    },
                    "list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductsResponse"
                        }
                    }
                }
            },
            "ApiResponseSuccess": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "example": "Success"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "ApiResponseError": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string"
                    }
                }
            }
        }
    }
}